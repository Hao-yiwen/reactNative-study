__d((function(g,r,i,_a,m,e,d){var t=r(d[0]);Object.defineProperty(e,"__esModule",{value:!0}),e.default=e.PerformanceObserverEntryList=void 0,e.warnNoNativePerformanceObserver=b;var n=t(r(d[1])),a=t(r(d[2])),o=t(r(d[3])),s=t(r(d[4])),u=t(r(d[5])),l=t(r(d[6])),f=(r(d[7]),r(d[8])),y=e.PerformanceObserverEntryList=(function(){return(0,s.default)((function t(n){(0,o.default)(this,t),this._entries=n}),[{key:"getEntries",value:function(){return this._entries}},{key:"getEntriesByType",value:function(t){return this._entries.filter((function(n){return n.entryType===t}))}},{key:"getEntriesByName",value:function(t,n){return void 0===n?this._entries.filter((function(n){return n.name===t})):this._entries.filter((function(a){return a.name===t&&a.entryType===n}))}}])})(),v=new Map,c=new Map,p=!1,h=function(){var t;if(l.default){var n=l.default.popPendingEntries(),o=null!=(t=null==n?void 0:n.entries)?t:[],s=null==n?void 0:n.droppedEntriesCount;if(0!==o.length){var u=o.map(f.rawToPerformanceEntry),v=function(t){var n=u.filter((function(n){if(!t.entryTypes.has(n.entryType))return!1;var a=t.entryTypes.get(n.entryType);return n.duration>=(null!=a?a:0)}));t.callback(new y(n),b,s)};for(var p of c.entries()){var h=(0,a.default)(p,2),b=h[0];v(h[1])}}}};function b(){(0,u.default)('missing-native-performance-observer','Missing native implementation of PerformanceObserver')}function T(){var t=Array.from(c.values()).map((function(t){return t.entryTypes})).reduce((function(t,n){return w(t,n)}),new Map);for(var n of t){var o=(0,a.default)(n,2),s=o[0],u=o[1];null==l.default||l.default.setDurationThreshold((0,f.performanceEntryTypeToRaw)(s),null!=u?u:0)}}function w(t,n){var o=new Map;for(var s of t){var u,l=(0,a.default)(s,2),f=l[0],y=l[1];if(n.has(f))o.set(f,Math.min(null!=y?y:0,null!=(u=n.get(f))?u:0));else o.set(f,y)}return o}(e.default=(function(){return(0,s.default)((function t(n){(0,o.default)(this,t),this._callback=n}),[{key:"observe",value:function(t){var a;if(l.default){var o;this._validateObserveOptions(t),t.entryTypes?(this._type='multiple',o=new Map(t.entryTypes.map((function(t){return[t,void 0]})))):(this._type='single',o=new Map([[t.type,t.durationThreshold]]));var s=null==(a=c.get(this))?void 0:a.entryTypes,u=s?w(o,s):o;if(!s||s.size!==u.size){c.set(this,{callback:this._callback,entryTypes:u}),p||(l.default.setOnPerformanceEntryCallback(h),p=!0);var y,E,O=s?(y=new Set(o.keys()),E=new Set(s.keys()),new Set((0,n.default)(y).filter((function(t){return!E.has(t)})))):new Set(o.keys());for(var k of O){var _;if(!v.has(k)){var P=(0,f.performanceEntryTypeToRaw)(k);l.default.startReporting(P)}v.set(k,(null!=(_=v.get(k))?_:0)+1)}T()}}else b()}},{key:"disconnect",value:function(){if(l.default){var t=c.get(this);if(t){for(var n of t.entryTypes.keys()){var a,o=null!=(a=v.get(n))?a:0;1===o?(v.delete(n),l.default.stopReporting((0,f.performanceEntryTypeToRaw)(n))):0!==o&&v.set(n,o-1)}c.delete(this),0===c.size&&(l.default.setOnPerformanceEntryCallback(void 0),p=!1),T()}}else b()}},{key:"_validateObserveOptions",value:function(t){var n=t.type,a=t.entryTypes,o=t.durationThreshold;if(!n&&!a)throw new TypeError("Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and type arguments.");if(a&&n)throw new TypeError("Failed to execute 'observe' on 'PerformanceObserver': An observe() call must include either entryTypes or type arguments.");if('multiple'===this._type&&n)throw new Error("Failed to execute 'observe' on 'PerformanceObserver': This observer has performed observe({entryTypes:...}, therefore it cannot perform observe({type:...})");if('single'===this._type&&a)throw new Error("Failed to execute 'observe' on 'PerformanceObserver': This PerformanceObserver has performed observe({type:...}, therefore it cannot perform observe({entryTypes:...})");if(a&&void 0!==o)throw new TypeError("Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and durationThreshold arguments.")}}])})()).supportedEntryTypes=Object.freeze(['mark','measure','event'])}),124,[7,25,51,14,15,10,123,125,126]);