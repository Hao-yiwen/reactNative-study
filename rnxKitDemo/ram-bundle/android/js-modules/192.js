__d((function(g,r,i,a,m,e,d){var n,t=r(d[0]),o=t(r(d[1])),s=t(r(d[2])),u=t(r(d[3])),c=t(r(d[4])),f=t(r(d[5])),l=r(d[6]),p=t(r(d[7])),h=t(r(d[8])),y=t(r(d[9])),k=r(d[10]),v=t(r(d[11])),C={},b=1,A={},R=new Map,T=new Map,w=function(n){return n()},S=!1,H={setWrapperComponentProvider:function(t){n=t},enableArchitectureIndicator:function(n){S=n},registerConfig:function(n){n.forEach((function(n){n.run?H.registerRunnable(n.appKey,n.run):((0,v.default)(null!=n.component,"AppRegistry.registerConfig(...): Every config is expected to set either `run` or `component`, but `%s` has neither.",n.appKey),H.registerComponent(n.appKey,n.component,n.section))}))},registerComponent:function(t,o,s){var c=(0,u.default)();return C[t]={componentProvider:o,run:function(s,u){var f,p=(null==(f=s.initialProps)?void 0:f.concurrentRoot)||s.concurrentRoot;(0,y.default)(w(o,c),s.initialProps,s.rootTag,n&&n(s),s.fabric,S,c,'LogBox'===t,t,(0,l.coerceDisplayMode)(u),p)}},s&&(A[t]=C[t]),t},registerRunnable:function(n,t){return C[n]={run:t},n},registerSection:function(n,t){H.registerComponent(n,t,!0)},getAppKeys:function(){return Object.keys(C)},getSectionKeys:function(){return Object.keys(A)},getSections:function(){return Object.assign({},A)},getRunnable:function(n){return C[n]},getRegistry:function(){return{sections:H.getSectionKeys(),runnables:Object.assign({},C)}},setComponentProviderInstrumentationHook:function(n){w=n},runApplication:function(n,t,o){if('LogBox'!==n){var u='Running "'+n;(0,c.default)(u),s.default.addSource('AppRegistry.runApplication'+b++,(function(){return u}))}(0,v.default)(C[n]&&C[n].run,`"${n}" has not been registered. This can happen if:\n* Metro (the local dev server) is run from the wrong folder. Check if Metro is running, stop it and restart it in the current project.\n* A module failed to load due to an error and \`AppRegistry.registerComponent\` wasn't called.`),f.default.setActiveScene({name:n}),C[n].run(t,o)},setSurfaceProps:function(n,t,o){if('LogBox'!==n){var u='Updating props for Surface "'+n+'" with '+JSON.stringify(t);(0,c.default)(u),s.default.addSource('AppRegistry.setSurfaceProps'+b++,(function(){return u}))}(0,v.default)(C[n]&&C[n].run,`"${n}" has not been registered. This can happen if:\n* Metro (the local dev server) is run from the wrong folder. Check if Metro is running, stop it and restart it in the current project.\n* A module failed to load due to an error and \`AppRegistry.registerComponent\` wasn't called.`),C[n].run(t,o)},unmountApplicationComponentAtRootTag:function(n){(0,k.unmountComponentAtNodeAndRemoveContainer)(n)},registerHeadlessTask:function(n,t){this.registerCancellableHeadlessTask(n,t,(function(){return function(){}}))},registerCancellableHeadlessTask:function(n,t,o){R.has(n)&&console.warn(`registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${n}'`),R.set(n,t),T.set(n,o)},startHeadlessTask:function(n,t,o){var s=R.get(t);if(!s)return console.warn(`No task registered for key ${t}`),void(h.default&&h.default.notifyTaskFinished(n));s()(o).then((function(){h.default&&h.default.notifyTaskFinished(n)})).catch((function(t){console.error(t),h.default&&t instanceof p.default&&h.default.notifyTaskRetry(n).then((function(t){t||h.default.notifyTaskFinished(n)}))}))},cancelHeadlessTask:function(n,t){var o=T.get(t);if(!o)throw new Error(`No task canceller registered for key '${t}'`);o()()}};!0!==g.RN$Bridgeless&&(o.default.registerCallableModule('AppRegistry',H),H.registerComponent('LogBox',(function(){return function(){return null}}))),m.exports=H}),192,[7,23,193,155,156,197,198,199,200,201,19,9]);